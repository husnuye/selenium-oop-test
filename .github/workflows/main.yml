name: .NET Test Automation with Allure

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --configuration Release

    - name: Install Allure CLI
      run: sudo npm install -g allure-commandline

    - name: Run tests with Allure adapter
      run: |
        mkdir -p allure-results
        dotnet test --configuration Release \
          --logger:"trx;LogFileName=TestResults/test-results.trx" \
          --results-directory TestResults

    - name: Detect test DLL path
      id: detect-dll
      run: |
        DLL_PATH=$(find ./ -type f -path "*/bin/Release/*" -name "*.dll" | grep -vE "ref|TestAdapter" | head -n 1)
        echo "DLL_PATH=$DLL_PATH" >> $GITHUB_ENV
        echo "Detected DLL: $DLL_PATH"

    - name: Convert TRX to Allure format (via adapter)
      run: |
        dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI || true
        export PATH="$PATH:/home/runner/.dotnet/tools"
        livingdoc test-assembly "$DLL_PATH" -t TestResults/test-results.trx -o allure-results

    - name: Generate Allure report
      run: |
        allure generate allure-results --clean -o allure-report
        ls -la allure-report

    - name: Upload Allure report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: allure-report/

    - name: Deploy Allure report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure-report
        publish_branch: gh-pages
        force_orphan: true
